{
    "exactfoldername": {
        "variableName": "Variable Value"
    },
    "change_me": {
        "headerVariable": "Variable in header",
        "codeBlockContent": "Variable value",
        "codeBlockTitle": "Custom Code Block Title",
        "admonitionText": "This is text inside an admonition",
        "markdownText": "Some markdown text",
        "markdownPartialLinkText": "somemarkdownlink",
        "markdownLink": "https://supertokens.com",
        "markdownBullet": "Markdown bullet",
        "reactTabContent": "Tab value",
        "reactTabsDefaultValue": "orange"
    },
    "common": {
        "googleClientId": "1060725074195-kmeum4crr01uirfl2op9kd5acmi9jutn.apps.googleusercontent.com",
        "googleClientSecret": "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",
        "facebookClientId": "FACEBOOK_CLIENT_ID",
        "facebookClientSecret": "FACEBOOK_CLIENT_SECRET",
        "githubClientId": "467101b197249757c71f",
        "githubClientSecret": "e97051221f4b6426e8fe8d51486396703012f5bd",
        "appleClientId": "4398792-io.supertokens.example.service",
        "appleKeyId": "7M48Y4RYDL",
        "applePrivateKey": "-----BEGIN PRIVATE KEY-----\\nMIGTAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBHkwdwIBAQQgu8gXs+XYkqXD6Ala9Sf/iJXzhbwcoG5dMh1OonpdJUmgCgYIKoZIzj0DAQehRANCAASfrvlFbFCYqn3I2zeknYXLwtH30JuOKestDbSfZYxZNMqhF/OzdZFTV0zc5u5s3eN+oCWbnvl0hM+9IW0UlkdA\\n-----END PRIVATE KEY-----",
        "appleTeamId": "YWQCXGJRJL"
    },
    "session": {
        "docsLinkRecipeName": "session",
        "codeImportRecipeName": "session",
        "goModelName": "sessmodels",
        "goModelNameForInit": "&sessmodels",
        "recipeNameCapitalLetters": "Session"
    },
    "thirdpartyemailpassword": {
        "nodeProviderInput": "ThirdPartyProviderInput",
        "goSignInUpResponse": "SignInUpResponse",
        "goModelNameForInit": "&tpepmodels",
        "pythonThirdPartyAPIOptions": "ThirdPartyAPIOptions",
        "pythonThirdPartySignInUpOkResult": "ThirdPartySignInUpOkResult",
        "pythonThirdPartySignInUpPostOkResult": "ThirdPartySignInUpPostOkResult",
        "pythonThirdPartySignInUpNoEmailGivenResult": "ThirdPartySignInUpPostNoEmailGivenByProviderResponse",
        "pythonThirdPartySIgnInUpPostAPI": "thirdparty_sign_in_up_post",
        "pythonthirdparty_sign_in_up": "thirdparty_sign_in_up",
        "goSignInUpPOSTResponse": "ThirdPartySignInUpPOSTResponse",
        "goThirdPartySignInUp": "ThirdPartySignInUp",
        "nodethirdPartySignInUpPOST": "thirdPartySignInUpPOST",
        "nextjsinitlastnumber": "6",
        "nodeEmailPasswordAPI": "emailPasswordSignUpPOST",
        "goEmailPasswordAPI": "EmailPasswordSignUpPOST",
        "pythonDisableEmailPasswordAPI": "disable_emailpassword_sign_up_post",
        "goEmailPasswordSignUpFunction": "EmailPasswordSignUp",
        "goEmailPasswordSignInFunction": "EmailPasswordSignIn",
        "pythonEmailPasswordSignUpFunction": "emailpassword_sign_up",
        "pythonEmailPasswordSignInFunction": "emailpassword_sign_in",
        "pythonEmailPasswordSignInOkResult": "EmailPasswordSignInOkResult",
        "pythonEmailPasswordSignInWrongCredentialsError": "EmailPasswordSignInWrongCredentialsError",
        "nodeEmailPasswordSignInFunction": "emailPasswordSignIn",
        "pythonEmailPasswordSignUpEmailAlreadyExistsError": "EmailPasswordSignUpEmailAlreadyExistsError",
        "webjsEmailPasswordSignUp": "emailPasswordSignUp",
        "webjsEmailPasswordSignIn": "emailPasswordSignIn",
        "webjsThirdPartySignInUp": "thirdPartySignInAndUp",
        "nodeThirdPartySignInUp": "thirdPartySignInUp",
        "webjsGetAuthorisationUrl": "getAuthorisationURLWithQueryParamsAndSetState",
        "getUserByEmailNode": "getUsersByEmail",
        "getUserByEmailGo": "GetUsersByEmail",
        "getUserByEmailPython": "get_users_by_email",
        "docsLinkRecipeName": "thirdpartyemailpassword",
        "codeImportRecipeName": "thirdpartyemailpassword",
        "codeSignInUpPostOkResultPythonType": "ThirdPartySignInUpPostOkResult",
        "codeSignInWrongCredentialsErrorPythonType": "EmailPasswordSignInWrongCredentialsError",
        "rid": "thirdpartyemailpassword",
        "recipeNameCapitalLetters": "ThirdPartyEmailPassword",
        "recipePreBuiltUINameCapitalLetters": "ThirdPartyEmailPasswordPreBuiltUI",
        "recipeComponentsOverrideProviderName": "ThirdpartyEmailPasswordComponentsOverrideProvider",
        "goModelName": "tpepmodels",
        "goModelNameForInit": "&tpepmodels",
        "goGetUserById": "GetUserById",
        "goThirdPartyOutput": "ThirdPartyOutput",
        "goEPModelsImport": "\"github.com/supertokens/supertokens-golang/recipe/emailpassword/epmodels\"",
        "goTPModelsImport": "\"github.com/supertokens/supertokens-golang/recipe/thirdparty/tpmodels\"",
        "goTPImport": "\"github.com/supertokens/supertokens-golang/recipe/thirdparty\"",
        "goSignIn": "EmailPasswordSignIn",
        "pythonSignIn": "emailpassword_sign_in",
        "nodeSignIn": "emailPasswordSignIn",
        "nodeVerifyCredentials": "emailPasswordVerifyCredentials",
        "nodeRecipeInitDefault": "// typecheck-only, removed from output",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "",
        "pythonRecipeInitWithoutSignInAndUpDefault": "",
        "reactRecipeInitDefault": "// typecheck-only, removed from output",
        "reactSignInUpFeature": "signInAndUpFeature",
        "nodeSignInUpFeatureStart": "// typecheck-only, removed from output",
        "nodeSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "goSignInUpFeatureStart": "// typecheck-only, removed from output",
        "goSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "pythonSignInUpFeatureStart": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureEnd": "# typecheck-only, removed from output",
        "nodeRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output",
        "nodeEmailverificationDefaultInit": "mode: \"REQUIRED\", // typecheck-only, removed from output",
        "goRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output",
        "goSignInUpFeatureStart": "// typecheck-only, removed from output",
        "goSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "goThirdPartyModelsImport": "\"github.com/supertokens/supertokens-golang/recipe/thirdparty/tpmodels\"",
        "pythonRecipeInitDefaultWithoutSignInUp": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureStart": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureEnd": "# typecheck-only, removed from output"
    },
    "thirdparty": {
        "nodeProviderInput": "ProviderInput",
        "goSignInUpResponse": "SignInUpResponse",
        "goModelNameForInit": "&tpmodels",
        "pythonThirdPartyAPIOptions": "APIOptions",
        "pythonThirdPartySignInUpOkResult": "SignInUpOkResult",
        "pythonThirdPartySignInUpPostOkResult": "SignInUpPostOkResult",
        "pythonThirdPartySignInUpNoEmailGivenResult": "SignInUpPostNoEmailGivenByProviderResponse",
        "pythonThirdPartySIgnInUpPostAPI": "sign_in_up_post",
        "pythonthirdparty_sign_in_up": "sign_in_up",
        "goSignInUpPOSTResponse": "SignInUpPOSTResponse",
        "goThirdPartySignInUp": "SignInUp",
        "nodethirdPartySignInUpPOST": "signInUpPOST",
        "nextjsinitlastnumber": "6",
        "getUserByEmailNode": "getUsersByEmail",
        "getUserByEmailGo": "GetUsersByEmail",
        "webjsThirdPartySignInUp": "signInAndUp",
        "nodeThirdPartySignInUp": "signInUp",
        "webjsGetAuthorisationUrl": "getAuthorisationURLWithQueryParamsAndSetState",
        "getUserByEmailPython": "get_users_by_email",
        "docsLinkRecipeName": "thirdparty",
        "codeImportRecipeName": "thirdparty",
        "recipeNameCapitalLetters": "ThirdParty",
        "recipePreBuiltUINameCapitalLetters": "ThirdPartyPreBuiltUI",
        "goModelName": "tpmodels",
        "goModelNameForInit": "&tpmodels",
        "goThirdPartyOutput": "ThirdPartyOutput",
        "goGetUserById": "GetUserByID",
        "goEPModelsImport": "",
        "goTPModelsImport": "",
        "goTPImport": "",
        "nodeRecipeInitDefault": "signInAndUpFeature: {providers: []}, // typecheck-only, removed from output",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitWithoutSignInAndUpDefault": "",
        "pythonRecipeInitDefault": "",
        "reactRecipeInitDefault": "// typecheck-only, removed from output",
        "reactSignInUpFeature": "signInAndUpFeature",
        "nodeSignInUpFeatureStart": "signInAndUpFeature: {",
        "nodeSignInUpFeatureEnd": "}",
        "goSignInUpFeatureStart": "SignInAndUpFeature: tpmodels.TypeInputSignInAndUp{",
        "goSignInUpFeatureEnd": "},",
        "pythonSignInUpFeatureStart": "sign_in_and_up_feature=thirdparty.SignInAndUpFeature(",
        "pythonSignInUpFeatureEnd": ")",
        "nodeRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output",
        "nodeEmailverificationDefaultInit": "mode: \"REQUIRED\", // typecheck-only, removed from output",
        "goRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output",
        "goSignInUpFeatureStart": "SignInAndUpFeature: tpmodels.TypeInputSignInAndUp{",
        "goSignInUpFeatureEnd": "},",
        "goThirdPartyModelsImport": "// typecheck-only, removed from output",
        "pythonRecipeInitDefaultWithoutSignInUp": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureStart": "sign_in_and_up_feature=thirdparty.SignInAndUpFeature(",
        "pythonSignInUpFeatureEnd": ")"
    },
    "passwordless": {
        "clearPasswordlessLoginAttemptInfo": "clearLoginAttemptInfo",
        "nodePasswordlessSignInUp": "signInUp",
        "goPasswordlessSignInUp": "SignInUpByEmail",
        "pythonPasswordlessSignInUp": "signinup",
        "nextjsinitlastnumber": "7",
        "webJsCreatePasswordlessCode": "createCode",
        "webJsResendPasswordlessCode": "resendCode",
        "webJsGetPasswordlessLoginAttemptInfo": "getLoginAttemptInfo",
        "webJsConsumePasswordlessCode": "consumeCode",
        "getUserByEmailNode": "getUserByEmail",
        "getUserByEmailGo": "GetUserByEmail",
        "getUserByEmailPython": "get_user_by_email",
        "docsLinkRecipeName": "passwordless",
        "codeImportRecipeName": "passwordless",
        "rid": "passwordless",
        "recipeNameCapitalLetters": "Passwordless",
        "recipePreBuiltUINameCapitalLetters": "PasswordlessPreBuiltUI",
        "goModelName": "plessmodels",
        "goModelNameForInit": "plessmodels",
        "goGetUserById": "GetUserByID",
        "goEPModelsImport": "",
        "nodeRecipeInitDefault": "contactMethod: \"EMAIL\", flowType: \"USER_INPUT_CODE_AND_MAGIC_LINK\", // typecheck-only, removed from output",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "contact_config=\"\", # type: ignore # typecheck-only, removed from output\n   flow_type=\"USER_INPUT_CODE\",",
        "pythonRecipeInitWithoutSignInAndUpDefault": "contact_config=\"\", # type: ignore # typecheck-only, removed from output\n   flow_type=\"USER_INPUT_CODE\",",
        "reactRecipeInitDefault": "contactMethod: \"EMAIL\", // This example will work with any contactMethod",
        "nodeEmailverificationDefaultInit": "mode: \"REQUIRED\", // typecheck-only, removed from output",
        "reactLinkClickedComponent": "LinkClicked",
        "goRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output",
        "goSignInUpFeatureStart": "// typecheck-only, removed from output",
        "goSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "goThirdPartyModelsImport": "\"github.com/supertokens/supertokens-golang/recipe/thirdparty/tpmodels\"",
        "pythonRecipeInitDefaultWithoutSignInUp": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureStart": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureEnd": "# typecheck-only, removed from output"
    },
    "emailpassword": {
        "nodeEmailPasswordAPI": "signUpPOST",
        "goEmailPasswordAPI": "SignUpPOST",
        "pythonDisableEmailPasswordAPI": "disable_sign_up_post",
        "goEmailPasswordSignUpFunction": "SignUp",
        "goEmailPasswordSignInFunction": "SignIn",
        "pythonEmailPasswordSignUpFunction": "sign_up",
        "pythonEmailPasswordSignInFunction": "sign_in",
        "pythonEmailPasswordSignUpEmailAlreadyExistsError": "SignUpEmailAlreadyExistsError",
        "pythonEmailPasswordSignInOkResult": "SignInOkResult",
        "pythonEmailPasswordSignInWrongCredentialsError": "SignInWrongCredentialsError",
        "nodeEmailPasswordSignInFunction": "signIn",
        "nextjsinitlastnumber": "6",
        "webjsEmailPasswordSignUp": "signUp",
        "webjsEmailPasswordSignIn": "signIn",
        "getUserByEmailNode": "getUserByEmail",
        "getUserByEmailGo": "GetUserByEmail",
        "getUserByEmailPython": "get_user_by_email",
        "docsLinkRecipeName": "emailpassword",
        "codeImportRecipeName": "emailpassword",
        "codeSignInWrongCredentialsErrorPythonType": "SignInWrongCredentialsError",
        "rid": "emailpassword",
        "recipeNameCapitalLetters": "EmailPassword",
        "recipePreBuiltUINameCapitalLetters": "EmailPasswordPreBuiltUI",
        "recipeComponentsOverrideProviderName": "EmailPasswordComponentsOverrideProvider",
        "goModelName": "epmodels",
        "goModelNameForInit": "&epmodels",
        "goGetUserById": "GetUserByID",
        "goEPModelsImport": "",
        "goSignIn": "SignIn",
        "pythonSignIn": "sign_in",
        "nodeSignIn": "signIn",
        "nodeVerifyCredentials": "verifyCredentials",
        "nodeRecipeInitDefault": "",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "",
        "pythonRecipeInitWithoutSignInAndUpDefault": "",
        "reactRecipeInitDefault": "",
        "nodeEmailverificationDefaultInit": "mode: \"REQUIRED\", // typecheck-only, removed from output",
        "goRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output",
        "goSignInUpFeatureStart": "// typecheck-only, removed from output",
        "goSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "goThirdPartyModelsImport": "\"github.com/supertokens/supertokens-golang/recipe/thirdparty/tpmodels\"",
        "pythonRecipeInitDefaultWithoutSignInUp": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureStart": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureEnd": "# typecheck-only, removed from output"
    },
    "thirdpartypasswordless": {
        "clearPasswordlessLoginAttemptInfo": "clearPasswordlessLoginAttemptInfo",
        "nodePasswordlessSignInUp": "passwordlessSignInUp",
        "goPasswordlessSignInUp": "PasswordlessSignInUpByEmail",
        "pythonPasswordlessSignInUp": "passwordless_signinup",
        "nodeProviderInput": "ThirdPartyProviderInput",
        "goSignInUpResponse": "ThirdPartySignInUp",
        "goModelNameForInit": "tplmodels",
        "pythonThirdPartyAPIOptions": "ThirdPartyAPIOptions",
        "pythonThirdPartySignInUpOkResult": "ThirdPartySignInUpOkResult",
        "pythonThirdPartySignInUpPostOkResult": "ThirdPartySignInUpPostOkResult",
        "pythonThirdPartySignInUpNoEmailGivenResult": "ThirdPartySignInUpPostNoEmailGivenByProviderResponse",
        "pythonThirdPartySIgnInUpPostAPI": "thirdparty_sign_in_up_post",
        "pythonthirdparty_sign_in_up": "thirdparty_sign_in_up",
        "goSignInUpPOSTResponse": "ThirdPartySignInUpPOSTResponse",
        "goThirdPartySignInUp": "ThirdPartySignInUp",
        "nodethirdPartySignInUpPOST": "thirdPartySignInUpPOST",
        "nodeThirdPartySignInUp": "thirdPartySignInUp",
        "nextjsinitlastnumber": "7",
        "webJsCreatePasswordlessCode": "createPasswordlessCode",
        "webJsResendPasswordlessCode": "resendPasswordlessCode",
        "webJsGetPasswordlessLoginAttemptInfo": "getPasswordlessLoginAttemptInfo",
        "webJsConsumePasswordlessCode": "consumePasswordlessCode",
        "getUserByEmailNode": "getUsersByEmail",
        "getUserByEmailGo": "GetUsersByEmail",
        "webjsThirdPartySignInUp": "thirdPartySignInAndUp",
        "webjsGetAuthorisationUrl": "getThirdPartyAuthorisationURLWithQueryParamsAndSetState",
        "getUserByEmailPython": "get_users_by_email",
        "docsLinkRecipeName": "thirdpartypasswordless",
        "codeImportRecipeName": "thirdpartypasswordless",
        "codeSignInUpPostOkResultPythonType": "ThirdPartySignInUpPostOkResult",
        "rid": "thirdpartypasswordless",
        "recipeNameCapitalLetters": "ThirdPartyPasswordless",
        "recipePreBuiltUINameCapitalLetters": "ThirdPartyPasswordlessPreBuiltUI",
        "goModelName": "tplmodels",
        "goModelNameForInit": "tplmodels",
        "goThirdPartyOutput": "ThirdPartySignInUpOutput",
        "goGetUserById": "GetUserByID",
        "goEPModelsImport": "",
        "goTPModelsImport": "\"github.com/supertokens/supertokens-golang/recipe/thirdparty/tpmodels\"",
        "goTPImport": "\"github.com/supertokens/supertokens-golang/recipe/thirdparty\"",
        "reactRecipeInitDefault": "contactMethod: \"EMAIL\",",
        "nodeRecipeInitDefault": "contactMethod: \"EMAIL\", flowType: \"USER_INPUT_CODE_AND_MAGIC_LINK\", // typecheck-only, removed from output",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "contact_config=\"\", # type: ignore # typecheck-only, removed from output\n   flow_type=\"USER_INPUT_CODE\",",
        "pythonRecipeInitWithoutSignInAndUpDefault": "contact_config=\"\", # type: ignore # typecheck-only, removed from output\n   flow_type=\"USER_INPUT_CODE\",",
        "reactSignInUpFeature": "signInUpFeature",
        "nodeSignInUpFeatureStart": "// typecheck-only, removed from output",
        "nodeSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "goSignInUpFeatureStart": "// typecheck-only, removed from output",
        "goSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "pythonSignInUpFeatureStart": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureEnd": "# typecheck-only, removed from output",
        "nodeRecipeInitDefaultWithoutSignInUp": "contactMethod: \"EMAIL\", flowType: \"USER_INPUT_CODE_AND_MAGIC_LINK\", // typecheck-only, removed from output",
        "nodeEmailverificationDefaultInit": "mode: \"REQUIRED\", // typecheck-only, removed from output",
        "reactLinkClickedComponent": "PasswordlessLinkClicked",
        "goRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output",
        "goSignInUpFeatureStart": "// typecheck-only, removed from output",
        "goSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "goThirdPartyModelsImport": "\"github.com/supertokens/supertokens-golang/recipe/thirdparty/tpmodels\"",
        "pythonRecipeInitDefaultWithoutSignInUp": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureStart": "# typecheck-only, removed from output",
        "pythonSignInUpFeatureEnd": "# typecheck-only, removed from output"
    },
    "mfa": {
        "recipeNameCapitalLetters": "ThirdPartyEmailPassword",
        "recipePreBuiltUINameCapitalLetters": "ThirdPartyEmailPasswordPreBuiltUI"
    }
}