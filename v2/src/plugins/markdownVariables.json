{
    "exactfoldername": {
        "variableName": "Variable Value"
    },
    "change_me": {
        "headerVariable": "Variable in header",
        "codeBlockContent": "Variable value",
        "codeBlockTitle": "Custom Code Block Title",
        "admonitionText": "This is text inside an admonition",
        "markdownText": "Some markdown text",
        "markdownPartialLinkText": "somemarkdownlink",
        "markdownLink": "https://supertokens.com",
        "markdownBullet": "Markdown bullet",
        "reactTabContent": "Tab value",
        "reactTabsDefaultValue": "orange"
    },
    "session": {
        "docsLinkRecipeName": "session",
        "codeImportRecipeName": "session",
        "goModelName": "sessmodels",
        "goModelNameForInit": "&sessmodels",
        "recipeNameCapitalLetters": "Session"
    },
    "thirdpartyemailpassword": {
        "getUserByEmailNode": "getUsersByEmail",
        "getUserByEmailGo": "GetUsersByEmail",
        "getUserByEmailPython": "get_users_by_email",
        "docsLinkRecipeName": "thirdpartyemailpassword",
        "codeImportRecipeName": "thirdpartyemailpassword",
        "codeSignInUpPostOkResultPythonType": "ThirdPartySignInUpPostOkResult",
        "codeSignInWrongCredentialsErrorPythonType": "EmailPasswordSignInWrongCredentialsError",
        "rid": "thirdpartyemailpassword",
        "recipeNameCapitalLetters": "ThirdPartyEmailPassword",
        "goModelName": "tpepmodels",
        "goModelNameForInit": "&tpepmodels",
        "goGetUserById": "GetUserById",
        "goThirdPartyOutput": "ThirdPartyOutput",
        "goEPModelsImport": "\"github.com/supertokens/supertokens-golang/recipe/emailpassword/epmodels\"",
        "goSignIn": "EmailPasswordSignIn",
        "pythonSignIn": "emailpassword_sign_in",
        "nodeSignIn": "emailPasswordSignIn",
        "nodeRecipeInitDefault": "// typecheck-only, removed from output",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "",
        "reactRecipeInitDefault": "// typecheck-only, removed from output",
        "reactSignInUpFeature": "signInAndUpFeature",
        "nodeSignInUpFeatureStart": "// typecheck-only, removed from output",
        "nodeSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "nodeRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output"
    },
    "thirdparty": {
        "getUserByEmailNode": "getUsersByEmail",
        "getUserByEmailGo": "GetUsersByEmail",
        "getUserByEmailPython": "get_users_by_email",
        "docsLinkRecipeName": "thirdparty",
        "codeImportRecipeName": "thirdparty",
        "recipeNameCapitalLetters": "ThirdParty",
        "goModelName": "tpmodels",
        "goModelNameForInit": "&tpmodels",
        "goThirdPartyOutput": "ThirdPartyOutput",
        "goGetUserById": "GetUserByID",
        "goEPModelsImport": "",
        "nodeRecipeInitDefault": "signInAndUpFeature: {providers: []}, // typecheck-only, removed from output",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "sign_in_and_up_feature=thirdparty.SignInAndUpFeature([]),",
        "reactRecipeInitDefault": "// typecheck-only, removed from output",
        "reactSignInUpFeature": "signInAndUpFeature",
        "nodeSignInUpFeatureStart": "signInAndUpFeature: {",
        "nodeSignInUpFeatureEnd": "}",
        "nodeRecipeInitDefaultWithoutSignInUp": "// typecheck-only, removed from output"
    },
    "passwordless": {
        "getUserByEmailNode": "getUserByEmail",
        "getUserByEmailGo": "GetUserByEmail",
        "getUserByEmailPython": "get_user_by_email",
        "docsLinkRecipeName": "passwordless",
        "codeImportRecipeName": "passwordless",
        "rid": "passwordless",
        "recipeNameCapitalLetters": "Passwordless",
        "goModelName": "plessmodels",
        "goModelNameForInit": "plessmodels",
        "goGetUserById": "GetUserById",
        "goEPModelsImport": "",
        "nodeRecipeInitDefault": "contactMethod: \"EMAIL\", flowType: \"USER_INPUT_CODE_AND_MAGIC_LINK\", // typecheck-only, removed from output",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "contact_config=\"\", # type: ignore # typecheck-only, removed from output\n   flow_type=\"USER_INPUT_CODE\",",
        "reactRecipeInitDefault": "contactMethod: \"EMAIL\", // This example will work with any contactMethod\n"
    },
    "emailpassword": {
        "getUserByEmailNode": "getUserByEmail",
        "getUserByEmailGo": "GetUserByEmail",
        "getUserByEmailPython": "get_user_by_email",
        "docsLinkRecipeName": "emailpassword",
        "codeImportRecipeName": "emailpassword",
        "codeSignInWrongCredentialsErrorPythonType": "SignInWrongCredentialsError",
        "rid": "emailpassword",
        "recipeNameCapitalLetters": "EmailPassword",
        "goModelName": "epmodels",
        "goModelNameForInit": "&epmodels",
        "goGetUserById": "GetUserByID",
        "goEPModelsImport": "",
        "goSignIn": "SignIn",
        "pythonSignIn": "sign_in",
        "nodeSignIn": "signIn",
        "nodeRecipeInitDefault": "",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "",
        "reactRecipeInitDefault": ""
    },
    "thirdpartypasswordless": {
        "getUserByEmailNode": "getUsersByEmail",
        "getUserByEmailGo": "GetUsersByEmail",
        "getUserByEmailPython": "get_users_by_email",
        "docsLinkRecipeName": "thirdpartypasswordless",
        "codeImportRecipeName": "thirdpartypasswordless",
        "codeSignInUpPostOkResultPythonType": "ThirdPartySignInUpPostOkResult",
        "rid": "thirdpartypasswordless",
        "recipeNameCapitalLetters": "ThirdPartyPasswordless",
        "goModelName": "tplmodels",
        "goModelNameForInit": "tplmodels",
        "goThirdPartyOutput": "ThirdPartySignInUpOutput",
        "goGetUserById": "GetUserById",
        "goEPModelsImport": "",
        "reactRecipeInitDefault": "contactMethod: \"EMAIL\",",
        "nodeRecipeInitDefault": "contactMethod: \"EMAIL\", flowType: \"USER_INPUT_CODE_AND_MAGIC_LINK\", // typecheck-only, removed from output",
        "goRecipeInitDefault": "",
        "pythonDefaultCallbackDefs": "",
        "pythonRecipeInitDefault": "contact_config=\"\", # type: ignore # typecheck-only, removed from output\n   flow_type=\"USER_INPUT_CODE\",",
        "reactSignInUpFeature": "signInUpFeature",
        "nodeSignInUpFeatureStart": "// typecheck-only, removed from output",
        "nodeSignInUpFeatureEnd": "// typecheck-only, removed from output",
        "nodeRecipeInitDefaultWithoutSignInUp": "contactMethod: \"EMAIL\", flowType: \"USER_INPUT_CODE_AND_MAGIC_LINK\", // typecheck-only, removed from output"
    }
}